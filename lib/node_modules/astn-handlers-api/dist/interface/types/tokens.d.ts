export declare type AnnotatedToken<Token, EventAnnotation> = {
    readonly "token": Token;
    readonly "annotation": EventAnnotation;
};
export declare type Wrapping = ["quote", {}] | ["apostrophe", {}] | ["none", {}];
export declare type OpenObject = {
    readonly "type": ["verbose group", {}] | ["dictionary", {}];
};
export declare type OpenArray = {
    readonly "type": ["shorthand group", {}] | ["list", {}];
};
export declare type SimpleString = {
    readonly "wrapping": Wrapping;
    readonly "value": string;
};
export declare type MultilineString = {
    readonly "lines": string[];
};
export declare type CloseObject = {};
export declare type CloseArray = {};
export declare type TaggedUnion = {};
export declare type CloseArrayToken<EventAnnotation> = AnnotatedToken<CloseArray, EventAnnotation>;
export declare type CloseObjectToken<EventAnnotation> = AnnotatedToken<CloseObject, EventAnnotation>;
export declare type OpenArrayToken<EventAnnotation> = AnnotatedToken<OpenArray, EventAnnotation>;
export declare type OpenObjectToken<EventAnnotation> = AnnotatedToken<OpenObject, EventAnnotation>;
export declare type SimpleStringToken<EventAnnotation> = AnnotatedToken<SimpleString, EventAnnotation>;
export declare type MultilineStringToken<EventAnnotation> = AnnotatedToken<MultilineString, EventAnnotation>;
export declare type TaggedUnionToken<EventAnnotation> = AnnotatedToken<TaggedUnion, EventAnnotation>;
