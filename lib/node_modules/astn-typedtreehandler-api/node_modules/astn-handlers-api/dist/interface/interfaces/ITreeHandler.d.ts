import * as grammar from "../types/tokens";
export declare type IObjectHandler<EventAnnotation> = {
    property: ($: {
        token: grammar.SimpleStringToken<EventAnnotation>;
    }) => IRequiredValueHandler<EventAnnotation>;
    onEnd: ($: {
        token: grammar.CloseObjectToken<EventAnnotation>;
    }) => void;
};
export declare type IArrayHandler<EventAnnotation> = {
    element: ($: {}) => IValueHandler<EventAnnotation>;
    onEnd: ($: {
        token: grammar.CloseArrayToken<EventAnnotation>;
    }) => void;
};
export declare type ITaggedUnionHandler<EventAnnotation> = {
    option: OnOption<EventAnnotation>;
    missingOption: () => void;
    end: ($: {}) => void;
};
export declare type OnObject<EventAnnotation> = ($: {
    token: grammar.OpenObjectToken<EventAnnotation>;
}) => IObjectHandler<EventAnnotation>;
export declare type OnArray<EventAnnotation> = ($: {
    token: grammar.OpenArrayToken<EventAnnotation>;
}) => IArrayHandler<EventAnnotation>;
export declare type OnSimpleString<EventAnnotation> = ($: {
    token: grammar.SimpleStringToken<EventAnnotation>;
}) => void;
export declare type OnMultilineString<EventAnnotation> = ($: {
    token: grammar.MultilineStringToken<EventAnnotation>;
}) => void;
export declare type OnTaggedUnion<EventAnnotation> = ($: {
    token: grammar.TaggedUnionToken<EventAnnotation>;
}) => ITaggedUnionHandler<EventAnnotation>;
export declare type OnOption<EventAnnotation> = ($: {
    token: grammar.SimpleStringToken<EventAnnotation>;
}) => IRequiredValueHandler<EventAnnotation>;
export declare type OnMissing = () => void;
export declare type IRequiredValueHandler<EventAnnotation> = {
    exists: IValueHandler<EventAnnotation>;
    missing: OnMissing;
};
export declare type IValueHandler<EventAnnotation> = {
    object: OnObject<EventAnnotation>;
    array: OnArray<EventAnnotation>;
    multilineString: OnMultilineString<EventAnnotation>;
    simpleString: OnSimpleString<EventAnnotation>;
    taggedUnion: OnTaggedUnion<EventAnnotation>;
};
export declare type ITreeHandler<EventAnnotation> = {
    root: IRequiredValueHandler<EventAnnotation>;
    onEnd: (annotation: EventAnnotation) => void;
};
